// ·∫®n hi·ªán form add food
function toggleForm() {
  const form = document.getElementById("formAddFood");
  if (form.style.display === "none") {
    form.style.display = "block";
    form.scrollIntoView({ behavior: "smooth" });
  } else {
    form.style.display = "none";
  }
}

// Edit food
document.addEventListener("DOMContentLoaded", () => {
  const editButtons = document.querySelectorAll(".edit-btn");

  editButtons.forEach(button => {
    button.addEventListener("click", () => {
      const row = button.closest("tr");
      const id = button.dataset.id;

      // L·∫•y c√°c √¥
      const cells = row.querySelectorAll("td");
      const imgCell = cells[1];
      const nameCell = cells[2];
      const descCell = cells[3];
      const priceCell = cells[4];
      const typeCell = cells[5];
      const statusCell = cells[6];
      const actionCell = cells[7];

      // L∆∞u d·ªØ li·ªáu c≈©
      const oldData = {
        name: nameCell.innerText,
        desc: descCell.innerText,
        price: priceCell.innerText.replace(/[^\d]/g, ""),
        type: typeCell.innerText,
        status: statusCell.innerText === "C√≤n" ? 1 : 0,
      };

      // Chuy·ªÉn c√°c √¥ th√†nh input
      nameCell.innerHTML = `<input type="text" value="${oldData.name}">`;
      descCell.innerHTML = `<textarea rows="2">${oldData.desc}</textarea>`;
      priceCell.innerHTML = `<input type="number" value="${oldData.price}">`;

      // Dropdown lo·∫°i
      const optionsLoai = ["Khuy·∫øn m√£i", "M√≥n m·ªõi", "Combo", "G√† r√°n", "Burger - C∆°m - M√¨ √Ω", "Tr√°ng mi·ªáng"];
      typeCell.innerHTML = `<select>${optionsLoai.map(o => `<option ${o === oldData.type ? "selected" : ""}>${o}</option>`).join("")}</select>`;

      // Dropdown tr·∫°ng th√°i
      statusCell.innerHTML = `
        <select>
          <option value="1" ${oldData.status == 1 ? "selected" : ""}>C√≤n</option>
          <option value="0" ${oldData.status == 0 ? "selected" : ""}>H·∫øt</option>
        </select>`;

      // Th√™m n√∫t L∆∞u v√† H·ªßy
      actionCell.innerHTML = `
        <button class="save-btn">üíæ</button>
        <button type="button" class="cancel-btn">‚ùå</button>
      `;

      // X·ª≠ l√Ω n√∫t H·ªßy
      actionCell.querySelector(".cancel-btn").addEventListener("click", () => {
        nameCell.innerText = oldData.name;
        descCell.innerText = oldData.desc;
        priceCell.innerText = parseInt(oldData.price).toLocaleString() + "‚Ç´";
        typeCell.innerText = oldData.type;
        statusCell.innerText = oldData.status ? "C√≤n" : "H·∫øt";
        actionCell.innerHTML = `<button class="edit-btn" data-id="${id}">‚úèÔ∏è</button>`;
      });

      // X·ª≠ l√Ω n√∫t L∆∞u (c·∫ßn AJAX ƒë·ªÉ l∆∞u v√†o CSDL)
      actionCell.querySelector(".save-btn").addEventListener("click", (e) => {
        e.preventDefault();
        const updated = {
          id: id,
          ten_mon: nameCell.querySelector("input").value,
          mo_ta: descCell.querySelector("textarea").value,
          gia: priceCell.querySelector("input").value,
          loai: typeCell.querySelector("select").value,
          is_available: statusCell.querySelector("select").value
        };

        fetch("foods.php", {
          method: "POST",
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(updated)
        })
        .then(res => res.json())
        .then(res => {
          if (res.success) {
            // G√°n l·∫°i d·ªØ li·ªáu m·ªõi v√†o d√≤ng ƒëang ch·ªânh s·ª≠a
            nameCell.innerText = updated.ten_mon;
            descCell.innerText = updated.mo_ta;
            priceCell.innerText = parseInt(updated.gia).toLocaleString() + "‚Ç´";
            typeCell.innerText = updated.loai;
            statusCell.innerText = updated.is_available == 1 ? "C√≤n" : "H·∫øt";
            actionCell.innerHTML = `<button class="edit-btn" data-id="${id}">‚úèÔ∏è</button>`;
          } else {
            alert("L·ªói: " + res.message);
          }
        });
      });
    });
  });
});

